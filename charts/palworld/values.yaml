# -- Namespace where the resources will be created
namespace: palworld
# -- (dict) The server configuration
# @notationType -- bigValue
server:
  # -- Additional annotations to the resources
  annotations: { }
  # -- Additional labels to the resources
  labels: { }
  # -- (dict) Resources limits for the container.
  resources:
    limits:
      cpu: 4
      memory: "12Gi"
    requests:
      cpu: 4
      memory: "8Gi"
  # -- (dict) Define some parameters for the storage volume
  storage:
    # -- (bool) Define if it will use an existing PVC containing the installation data.
    external: false
    # -- (bool) The external PVC name to use.
    externalName: ""
    # -- Keeps helm from deleting the PVC. By default, helm does not delete pvcs.
    preventDelete: false
    # -- The size of the pvc storage.
    size: 12Gi
    # -- The storage class name.
    storageClassName: ""
  # -- (dict) Define the parameters for the server image container
  # @notationType -- bigValue
  image:
    # -- Name of the image, without the tag.
    name: thijsvanloef/palworld-server-docker
    # -- The tag of the image.
    tag: latest
    # -- Define the pull policy for the server image.
    imagePullPolicy: IfNotPresent

  # -- (dict) Change the ports to be mapped to the pod.
  # If you change those, make sure to change the service.ports and server.config accordingly.
  # @notationType -- bigValue
  ports:
    # -- (dict) The "game" port definition.
    # If you change this, make sure to change the service.ports.game and server.config accordingly.
    - name: game
      containerPort: 8211
      protocol: UDP
    # -- (dict) The "query" port definition .
    # If you change this, make sure to change the service.ports.query_port and server.config accordingly.
    - name: query
      containerPort: 27015
      protocol: UDP
    # -- (dict) The "rcon" port definition .
    # If you change this, make sure to change the service.ports.rcon and server.config accordingly.
    - name: rcon
      containerPort: 25575
      protocol: UDP
  # -- (string) Change the deployment strategy
  strategy: Recreate

  # -- (dict) Change the service configuration.
  # If you change those, make sure to change the server.config and server.ports accordingly.
  # @notationType -- bigValue
  service:
    # -- (bool) Enables the creation of the service component.
    enabled: true
    # -- Additional annotations to the resources
    annotations: { }
    # -- Additional labels to the resources
    labels: { }
    # -- (string) The type of service to be created.
    type: LoadBalancer
    # -- (dict) The "healthz" definition .
    # Use if you need to create a TCP health check for load balancers on cloud services.
    healthz:
      enabled: false
      name: healthz
      port: 80
      protocol: TCP
      targetPort: 80
    # -- (dict) Change the ports to be mapped to the service.
    # If you change those, make sure to change the server.config and server.ports accordingly.
    # @notationType -- bigValue
    ports:
      # -- (dict) The "game" port definition.
      # If you change this, make sure to change the server.ports.game and server.config.port accordingly.
      - name: game
        port: 8211
        protocol: UDP
        targetPort: 8211
      # -- (dict) The "query" port definition .
      # If you change this, make sure to change the server.ports.query and server.config.query_port accordingly.
      - name: query
        port: 27015
        protocol: UDP
        targetPort: 27015
      # -- (dict) The "rcon" port definition .
      # If you change this, make sure to change the server.ports.rcon and server.config.rcon.port accordingly.
      - name: rcon
        port: 25575
        protocol: UDP
        targetPort: 25575
  # -- (dict) Change the game server configuration.
  # If you change those, make sure to change the service.ports and server.ports accordingly.
  # Those are directly connected with the container image, providing multiple environment variables to the scripts.
  # @notationType -- bigValue
  config:
    # -- Additional annotations to the resources
    annotations: { }
    # -- Additional labels to the resources
    labels: { }
    puid: 1000
    pgid: 1000
    port: 8211
    # -- (string) The query port of the game.
    query_port: 27015
    # -- The max number of players supported.
    max_players: 16
    # -- (bool) Enables the multithreading, allowing the usage of up to 4 cores (needs citation)
    multithreading: true
    # -- (dict) Remote connection configuration.
    # Allows the remote connection and management for the server.
    # Those are directly connected with the container image, providing multiple environment variables to the scripts.
    # @notationType -- bigValue
    rcon:
      # -- (bool) Enables/disables the rcon port.
      enable: true
      # -- (string) The port for rcon. If you change this, make sure to change the service.ports and server.ports accordingly.
      port: 25575
      # -- (string) If not provided, a random password will be generated and stored on the secret.
      password: ""
    community:
      # -- (bool) Enables/disables the visibility of this server on Steam community servers list.
      enable: true
      # -- (string) If not provided, a random password will be generated and stored on the secret.
      password: ""
      # -- (string) If not provided, a random server name will be generated with the "palworld_" prefix.
    server_name: ""
