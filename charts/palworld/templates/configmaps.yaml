{{- $cPwd := randAlphaNum 12 | nospace -}}
{{- $sName := "" -}}
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Values.namespace }}
  name: "{{ .Release.Name }}-env-config"
  annotations:
    {{- with .Values.server.config.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  labels:
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: "{{ .Release.Name }}-config"
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: "{{ .Release.Name }}-config"
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    {{- with .Values.server.config.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
data:
  PUID: "{{ .Values.server.config.puid }}"
  PGID: "{{ .Values.server.config.pgid }}"
  PORT: "{{ .Values.server.config.port }}"
  PLAYERS: "{{ .Values.server.config.max_players }}"
  MULTITHREADING: "{{ .Values.server.config.multithreading }}"
  {{ if .Values.server.config.rcon.enable }}
  RCON_ENABLED: "true"
  RCON_PORT: "{{ .Values.server.config.rcon.port }}"
  {{ end }}
  {{ if .Values.server.config.community.enable }}
  COMMUNITY: "true"
  SERVER_PASSWORD: {{- if .Values.server.config.community.password }} "{{ .Values.server.config.community.password }}" {{ else }} {{ $cPwd }} {{ end }}
  {{ end }}
  {{ if .Values.server.config.server_name }}
  SERVER_NAME: {{ regexReplaceAll "\\W+" .Values.server.config.server_name "_" }}
  {{ else }}
  SERVER_NAME: {{ printf "%s_%s" "palworld" (randAlphaNum 6 | nospace) }}
  {{ end }}
  TZ: {{ .Values.server.config.timezone }}
  PUBLIC_IP: {{ .Values.server.config.public_ip | quote }}
  PUBLIC_PORT: {{ .Values.server.config.public_port | quote }}
  SERVER_DESCRIPTION: {{ .Values.server.config.server_description }}
  UPDATE_ON_BOOT: {{ .Values.server.config.update_on_boot | quote }}
  QUERY_PORT: {{ .Values.server.config.query_port | quote }}
  {{ if .Values.server.config.env }}
  {{- with .Values.server.config.env }}
  {{- toYaml . | nindent 2  }}
  {{- end }}
  {{ if .Values.server.config.daily_reboot.enable }}
  restart-deployment.sh:  |
    #!/bin/bash
    cont=$(kubectl -n {{ .Values.namespace }} get pods -o=jsonpath='{.items[?(@.metadata.labels.app\.kubernetes\.io/name=="{{ .Release.Name }}-server")].metadata.name}')
    
    function exec_rcon_cmd() {
      kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "$1"
    }
    
    exec_rcon_cmd "Broadcast Saving_Server_Data..."
    exec_rcon_cmd save
    sleep 30
    exec_rcon_cmd "Broadcast Backing_up_Server_Data..."
    exec_rcon_cmd backup
    sleep 30

    step=5
    for i in $(seq 30 -$step 1); do
      exec_rcon_cmd "Broadcast Rebooting_in_$i_seconds..."
      sleep $step
    done

    exec_rcon_cmd "Shutdown 1"
    sleep 30
    kubectl -n {{ .Values.namespace }} rollout restart deployment/{{ .Release.Name }}-server
  {{ end }}
  {{ end }}
