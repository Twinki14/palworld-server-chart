{{- $cPwd := randAlphaNum 12 | nospace -}}
{{- $sName := "" -}}
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Values.namespace }}
  name: "{{ .Release.Name }}-env-config"
  annotations:
    {{- with .Values.server.config.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  labels:
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: "{{ .Release.Name }}-config"
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: "{{ .Release.Name }}-config"
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    {{- with .Values.server.config.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
data:
  PUID: "{{ .Values.server.config.puid }}"
  PGID: "{{ .Values.server.config.pgid }}"
  PORT: "{{ .Values.server.config.port }}"
  PLAYERS: "{{ .Values.server.config.max_players }}"
  MULTITHREADING: "{{ .Values.server.config.multithreading }}"
  {{ if .Values.server.config.rcon.enable }}
  RCON_ENABLED: "true"
  RCON_PORT: "{{ .Values.server.config.rcon.port }}"
  {{ end }}
  {{ if .Values.server.config.community.enable }}
  COMMUNITY: "true"
  SERVER_PASSWORD: {{- if .Values.server.config.community.password }} "{{ .Values.server.config.community.password }}" {{ else }} {{ $cPwd }} {{ end }}
  {{ end }}
  {{ if .Values.server.config.server_name }}
  SERVER_NAME: {{ regexReplaceAll "\\W+" .Values.server.config.server_name "_" }}
  {{ else }}
  SERVER_NAME: {{ printf "%s_%s" "palworld" (randAlphaNum 6 | nospace) }}
  {{ end }}
  TZ: {{ .Values.server.config.timezone }}
  PUBLIC_IP: {{ .Values.server.config.public_ip | quote }}
  PUBLIC_PORT: {{ .Values.server.config.public_port | quote }}
  SERVER_DESCRIPTION: {{ .Values.server.config.server_description }}
  UPDATE_ON_BOOT: {{ .Values.server.config.update_on_boot | quote }}
  QUERY_PORT: {{ .Values.server.config.query_port | quote }}
  {{ if .Values.server.config.world_parameters }}
  {{- with .Values.server.config.world_parameters }}
  {{- toYaml . | nindent 2  }}
  {{- end }}
  {{ if .Values.server.config.daily_reboot.enable }}
  restart-deployment.sh:  |
    #!/bin/bash
    cont=$(kubectl -n {{ .Values.namespace }} get pods -o=jsonpath='{.items[?(@.metadata.labels.app.kubernetes.io/name=="{{ .Release.Name }}-server")].metadata.name}')
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "Broadcast Saving_Server_Data..."
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli save
    sleep 30
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "Broadcast Backing_up_Server_Data..."
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont backup
    sleep 30
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "Broadcast Backup_Complete!_Rebooting_in_30_seconds..."
    sleep 15
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "Broadcast Rebooting_in_15_seconds..."
    sleep 5
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "Broadcast Rebooting_in_10_seconds..."
    sleep 1
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "Broadcast Rebooting_in_9_seconds..."
    sleep 1
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "Broadcast Rebooting_in_8_seconds..."
    sleep 1
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "Broadcast Rebooting_in_7_seconds..."
    sleep 1
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "Broadcast Rebooting_in_6_seconds..."
    sleep 1
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "Broadcast Rebooting_in_5_seconds..."
    sleep 1
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "Broadcast Rebooting_in_4_seconds..."
    sleep 1
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "Broadcast Rebooting_in_3_seconds..."
    sleep 1
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "Broadcast Rebooting_in_2_seconds..."
    sleep 1
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "Broadcast Rebooting_in_1_seconds..."
    sleep 1
    kubectl exec -n {{ .Values.namespace }} -i pod/$cont rcon-cli "Shutdown 1"
    sleep 30
    kubectl -n {{ .Values.namespace }} rollout restart deployment/{{ .Release.Name }}-server
  {{ end }}
  {{ end }}
